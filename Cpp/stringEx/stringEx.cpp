// stringEx.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

int main()
{
    char Arr[100];

    // 문자를 표현하는 근본방식은 달라지지 않는다.
    // A = 67

    // unsigned char = 0 ~ 255
    // 한글은 저 범위에 못들어간다.
    // -> 아스키 인코딩 방식 때문 (초기형 인코딩 방식)
    // 인코딩 = 숫자 1개와 문자 1개를 매칭시키는 방법
    // 
    // 그런데 컴퓨터가 널리 보급되면서 아스키는 이제 너무 범위가 좁다.
    // -> ansi 혹은 멀티 바이트 방식이 만들어짐 (어떤때는 1바이트 어떤때는 2바이트)
    // 65536개 까지 표현가능
    // -> 그럼에도 전세계의 글자를 다 넣을 수 는 없었다.
    // -> 따라서 국가코드라는게 생겼다.
    // 
    // 그런데 왜 힘들게 어떤때는 1바이트, 어떤때는 2바이트를 사용해
    // -> 그냥 통일하자 + 이모지도 넣어 버리자
    // -> 유니코드 혹은 와이드바이트 스트링이 만들어짐
    // -> UTF-8 UTF-16 시리즈 
    // 
    // - UTF-8
    //


    // 따라서 코딩을 할때 내가 사용하는 문자열이 
    // 어떤 인코딩 방식인지 인지하고 사용해야 한다.

    // 아무것도 안붙이고 문자를 사용하면 멀티바이트 방식
    char Test1[6] = "가";

    // L을 붙이고 사용하면 유니코드 방식
    wchar_t Test2[2] = L"가";

    // 최신 C++문법은 u8 문자열 방식도 지원한다.
    u8"가";

    // 멀티바이트를 기본으로 사용하다가
    // 와이드 바이트나 UTF-8로 변환해야할 일이 생기면
    // 그때그때 마다 변환하는 방식으로 사용할 것이다.


    {
        // 참고로 비주얼 스튜디오는 유니코드나 멀티바이트만 눈에 보인다.
        char Arr0[100] = "가나다라";
       
    }


    wchar_t CH = '가';
}