// 054_CompileEx.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
#include "Player.h"

// 전처리기 -> 컴파일러 -> 어셈블러 -> 링커
// 
// 전처리기
// - 주석 삭제
// - 코드 치환
// 전처리기 핵심
//  #pragma once 
// 핵심 1. 한파일 내부에서 헤더중복을 막아준다.
// 핵심 2. 헤더에서는 최대한 다른 헤더를 추가 안하는것이 좋다
//        (순환참조 문제)
// 
// 컴파일러
// 헤더는 컴파일의 주체는 아니다. .cpp 파일이 주체이다. (.cpp 파일에 헤더파일이 포함될뿐이다.)
// 중간컴파일 - .obj 만드는것
// 핵심 1. 네임맹글링등의 기능등을 이용해 함수나 중간컴파일(.obj)을 하게 된다.
//         이때 .cpp 파일 단위로 한다. 
//         * 그 중 가장 중요한건 함수들의 스택에서 실행메모리 크기이다.
//         알아내서 054_CompileEx.cpp 가 결정난다.
//            
//        네임맹글링 - 우리눈에 보이는건 같은 이름인데 사실 같은 이름이 아닌애들
//                    ex) 오버로딩
//  
// 어셈블러
// - 진짜 기계어 코드로 변경해줌
// 
// 링커(LNK)
// - 각 obj 파일에서 기계어로 번역된걸 모두 연결해 1개의 파일로 모음
// - .obj 파일이 아무리 많아도 .exe 파일은 1개 나옴
//

// 헤더 쪽에 구현이 있는건 굉장히 문제가 생길여지가 더 있기 때문에
// 최대한 철저하게 선언과 구현을 Header와 Cpp로 분할해야 한다.
// 
// 선언 -> 이런 함수, 클래스, 변수가 있어
// 
// 이런 함수 
// void Test();
// 
// 이런 클래스 (전방 선언) - 무조건 참조형만 가능
// class Player*
// class Player& 
// 
// 이런 변수가 있어 (extern) - 절대 초기화 하면 안된다.
// extern int Value; 
// 
//

int main()
{
    // 중요! -> 자료형의 크기는 바뀌지 않는다.
    Player NewPlayer;
}